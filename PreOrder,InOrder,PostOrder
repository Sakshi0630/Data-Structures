#include<stdio.h>
#include<iostream>
using namespace std;
struct BstNode{
    char data;
    BstNode* left;
    BstNode* right;
};
BstNode* root;
BstNode* GetNewNode(char data){
   BstNode* NewNode=new BstNode();
   NewNode->data=data;
   NewNode->left=NULL;
   NewNode->right=NULL;
   return NewNode;
}
BstNode* insert(BstNode* root,char data){
    if(root==NULL){
        root=GetNewNode(data);
    }
    else if(data<=root->data){
        root->left=insert(root->left,data);
    }
    else if(data>root->data){
        root->right=insert(root->right,data);
    }
        return root;
}
void PreOrder(BstNode* root){
    if(root==NULL)
    return;
        cout<<root->data<<" ";
        PreOrder(root->left);
        PreOrder(root->right);
        
}
void InOrder(BstNode* root){
    if(root==NULL)
    return;
    InOrder(root->left);
    cout<<root->data<<" ";
    InOrder(root->right);
}
void PostOrder(BstNode* root){
    if(root==NULL)
    return;
    PostOrder(root->left);
    PostOrder(root->right);
    cout<<root->data<<" ";
}
int main(){
    root=NULL;
    root=insert(root,'F');
    root=insert(root,'D');
    root=insert(root,'J');
    root=insert(root,'B');
    root=insert(root,'E');
    root=insert(root,'G');
    root=insert(root,'K');
    root=insert(root,'A');
    root=insert(root,'C');
    root=insert(root,'I');
    PreOrder(root);
    cout<<endl;
    InOrder(root);
    cout<<endl;
    PostOrder(root);
    cout<<endl;
}
